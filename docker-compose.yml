version: '3.9'

x-aphrc-common: &aphrc-common
  build:
    context: .
    dockerfile: Dockerfile  # Make sure your Dockerfile is set to use Python 3.11
  volumes: &aphrc-common-volumes
    - ./:/code
  working_dir: /code
  environment: &aphrc-common-env
    REDIS_HOST: "redis"  # Update to service name for Redis connection
    REDIS_PORT: "6379"
    DEBUG: "True"

services:
  api:
    <<: *aphrc-common
    ports:
      - "8000:8000"
    command: uvicorn ai_services_api.main:app --host 0.0.0.0 --port 8000 --reload
    container_name: api-standalone
    depends_on:
      redis:  # Ensures the API waits for the Redis service
        condition: service_healthy  # Wait until Redis is healthy
    image: python:3.11 # Specify Python 3.11 as the base image

  redis:
    image: redis:latest
    container_name: redis-api-standalone
    hostname: aphrc-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data           # For Redis data persistence
      - ./redis.conf:/usr/local/etc/redis/redis.conf  # Mount your custom config file
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]  # Specify the config file
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]  # Check if Redis is responsive
      interval: 30s                        # Check every 30 seconds
      timeout: 10s                         # Timeout for each check
      retries: 3                           # Retry up to 3 times
