x-aphrc-common: &aphrc-common
  build:
    context: .
    dockerfile: Dockerfile
  volumes:
    - ./:/code
  working_dir: /code
  environment:
    - REDIS_URL=redis://redis:6379
    - NEO4J_URI=bolt://neo4j:7687
    - DEBUG=True
    - GEMINI_API_KEY=${GEMINI_API_KEY}
    - POSTGRES_HOST=postgres
    - POSTGRES_DB=${POSTGRES_DB:-aphrcdb}
    - POSTGRES_USER=${POSTGRES_USER:-aphrcuser}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-kimu}
    - NEO4J_USER=${NEO4J_USER:-neo4j}
    - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password}
    - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}

services:
  api:
    <<: *aphrc-common
    ports:
      - "8000:8000"
    command: bash /code/init-script.sh
    volumes:
      - ./:/code
      - ./init-script.sh:/code/init-script.sh
    container_name: api-standalone
    depends_on:
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - aphrc-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    env_file:
      - .env

  redis:
    image: redis:latest
    container_name: redis-standalone
    hostname: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aphrc-network

  neo4j:
    image: neo4j:5.12.0
    container_name: neo4j
    hostname: neo4j
    restart: always
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: "${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-password123456789!}"
      NEO4J_server_memory_pagecache_size: 1G
      NEO4J_server_memory_heap_initial__size: 1G
      NEO4J_server_memory_heap_max__size: 1G
    volumes:
      - neo4j-data:/data
    healthcheck:
      test: ["CMD", "neo4j", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - aphrc-network

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: "${POSTGRES_DB:-aphrcdb}"
      POSTGRES_USER: "${POSTGRES_USER:-aphrcuser}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-kimu}"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-aphrcuser} -d ${POSTGRES_DB:-aphrcdb}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - aphrc-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_EMAIL:-admin@admin.com}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_PASSWORD:-admin}"
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - aphrc-network

networks:
  aphrc-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  neo4j-data:
  faiss-data:
    driver: local