version: '3.9'

x-aphrc-common: &aphrc-common
  build:
    context: .  # Ensure the context points to the correct directory
    dockerfile: Dockerfile  # Ensure Dockerfile uses Python 3.11 and sets up the environment
  volumes: &aphrc-common-volumes
    - ./:/code
  working_dir: /code
  environment: &aphrc-common-env
    REDIS_URL: "redis://redis:6379"  # Combined URL for Redis connection
    DEBUG: "True"
    GEMINI_API_KEY: "${GEMINI_API_KEY}"  # Include your Gemini API key from .env file

services:
  api:
    <<: *aphrc-common
    ports:
      - "8000:8000"
    command: poetry run uvicorn ai_services_api.app:app --host 0.0.0.0 --port 8000
    container_name: api-standalone
    depends_on:
      redis:
        condition: service_healthy  # Wait until Redis is healthy

  redis:
    image: redis:latest
    container_name: redis-api-standalone
    hostname: aphrc-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data           # For Redis data persistence
      - ./redis.conf:/usr/local/etc/redis/redis.conf  # Mount your custom config file
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]  # Specify the config file
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 120s
      timeout: 40s
      retries: 6  # Modify the retries as per your preference
